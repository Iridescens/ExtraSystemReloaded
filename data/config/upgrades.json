{
  #upgrade settings

  #note that adding additional values will not work unless you modify the source code and rebuild the jar.
  #setting certain values too high may have unintended consequences. i have attempted to cap the problem values
  #but it is not perfect.

  #setting certain values to negative may have unintended consequences. especially the quality mult.
  #if you want negative scaling, focus on the Scalar values.

  #if a variable ends with UpgradeScalar, that is the multiplier for upgrade levels.
  #if a variable ends with QualityMult, that is the exponent modifier for quality.
  #both of the above for the same stat signify that a variable is subject to diminishing returns.

  #if a variable ends with Scalar, it is a flat multiplier multiplied with level.
  "Weapons": {
    "upgradeClass": "extrasystemreloaded.systems.upgrades.impl.Weapons",
    "resourceRatios": {
        "supplies": 1.0,
        "volatiles": 2.0,
        "organics": 0.0,
        "hand_weapons": 1.5,
        "metals": 2.0,
        "rare_metals": 1.5,
        "heavy_machinery": 1.5
    },
    "damageUpgradeScalar": 3,
    "damageQualityMult": 1.33,
    "rangeUpgradeScalar": 1.25,
    "rangeQualityMult": 2,
    "fluxCostUpgradeScalar": -3.66,
    "fluxCostQualityMult": 1.75,
    "weaponHealthScalar": 2
  },
  "Durability": {
    "upgradeClass": "extrasystemreloaded.systems.upgrades.impl.Durability",
    "resourceRatios": {
      "supplies": 1.0,
      "volatiles": 0.75,
      "organics": 2.0,
      "hand_weapons": 0.0,
      "metals": 3.5,
      "rare_metals": 0.75,
      "heavy_machinery": 3.0
    },
    "hullUpgradeScalar": 2,
    "engineHealthScalar": 2,
    "empTakenScalar": -1.5,
    "armorUpgradeScalar": 5.75,
    "armorQualityMult": 0.55
  },
  "Logistics": {
    "upgradeClass": "extrasystemreloaded.systems.upgrades.impl.Logistics",
    "resourceRatios": {
      "supplies": 1.0,
      "volatiles": 1.0,
      "organics": 1.0,
      "hand_weapons": 0.0,
      "metals": 2.0,
      "rare_metals": 3.0,
      "heavy_machinery": 2.0
    },
    "cargoScalar": 2,
    "crewScalar": 2,
    "fuelScalar": 2,
    "repairRateScalar": 1.3,
    "suppliesToDeployUpgradeScalar": -8.5,
    "suppliesToDeployQualityMult": 2,
    "suppliesPerMonthUpgradeScalar": -4.65,
    "suppliesPerMonthQualityMult": 2,
    "minCrewUpgradeScalar": -8.6,
    "minCrewQualityMult": 0.5,
    "fuelUseUpgradeScalar": -5.1,
    "fuelUseQualityMult": 3
  },
  "Technology": {
    "upgradeClass": "extrasystemreloaded.systems.upgrades.impl.Technology",
    "resourceRatios": {
      "supplies": 1.0,
      "volatiles": 2.0,
      "organics": 2.0,
      "hand_weapons": 0.0,
      "metals": 2.0,
      "rare_metals": 3.0,
      "heavy_machinery": 1.0
    },
    "sensorScalar": 3,
    "fluxUpgradeScalar": 3.67,
    "fluxQualityMult": 3.25,
    "shieldFluxPerSecUpgradeScalar": -5,
    "shieldFluxPerSecQualityMult": 2.25,
    "shieldFluxPerDamUpgradeScalar": -2,
    "shieldFluxPerDamQualityMult": 0.75,
    "shieldUnfoldRateScalar": 2,
    "phaseFluxPerSecUpgradeScalar": -2.1,
    "phaseFluxPerSecQualityMult": 3,
    "phaseActivateFluxUpgradeScalar": -7.75,
    "phaseActivateFluxQualityMult": 1.5,
    "phaseCooldownScalar": -0.75
  },
  "Engines": {
    "upgradeClass": "extrasystemreloaded.systems.upgrades.impl.Engines",
    "resourceRatios": {
      "supplies": 1.0,
      "volatiles": 3.0,
      "organics": 1.0,
      "hand_weapons": 0.0,
      "metals": 1.0,
      "rare_metals": 2.0,
      "heavy_machinery": 1.0
    },
    "maxSpeedScalar": 1,
    "accelerationScalar": 3,
    "turnRateScalar": 3,
    "burnLevelScalar": 2
  },
  "Conditioning": {
    "upgradeClass": "extrasystemreloaded.systems.upgrades.impl.Conditioning",
    "resourceRatios": {
      "supplies": 3.0,
      "volatiles": 0.0,
      "organics": 2.0,
      "hand_weapons": 0.0,
      "metals": 0.0,
      "rare_metals": 0.0,
      "heavy_machinery": 1.5
    },
    "crDeployedScalar": -1.3,
    "crRecoveryScalar": 7.5,

    "peakCrScalar": 2,
    "crLossScalar": -0.25,

    # the below are flat multipliers to PPT and CR Loss based on hullsize.
    # the intention is that frigates gain much more than others out of this, since they typically
    # have the lowest PPT.

    "frigateMult": 8,
    "destroyerMult": 3,
    "cruiserMult": 1.5,
    "capitalMult": 1
  },
  "Hangars": {
    "name": "Hangars",
    "upgradeClass": "extrasystemreloaded.systems.upgrades.impl.Hangars",
    "resourceRatios": {
      "supplies": 2.0,
      "volatiles": 1.0,
      "organics": 0.0,
      "hand_weapons": 1.0,
      "metals": 2.0,
      "rare_metals": 2.0,
      "heavy_machinery": 5.0
    },
    "refitTimeScalar": -1.33,
    "rangeScalar": 2,
    "replacementDecreaseScalar": -1.5,
    "replacementIncreaseScalar": 1.5
  },
  "Magazines": {
    "name": "Magazines",
    "upgradeClass": "extrasystemreloaded.systems.upgrades.impl.Magazines",
    "resourceRatios": {
      "supplies": 0.5,
      "volatiles": 4.0,
      "organics": 0.0,
      "hand_weapons": 1.5,
      "metals": 1.0,
      "rare_metals": 0.5,
      "heavy_machinery": 2.0
    },
    "missileMagazineScalar": 3.33,
    "rateOfFireUpgradeScalar": 5,
    "rateOfFireQualityMult": 1.33
  },
  "Systems": {
    "name": "Systems",
    "upgradeClass": "extrasystemreloaded.systems.upgrades.impl.Systems",
    "resourceRatios": {
      "supplies": 2.0,
      "volatiles": 1.0,
      "organics": 1.0,
      "hand_weapons": 0.25,
      "metals": 0.5,
      "rare_metals": 3.0,
      "heavy_machinery": 1.5
    },
    "systemUsesMult": 1.67,
    "systemRechargeRateMult": 2.0,
    "systemRangeMult": 3.33,
    "systemCooldownMult": 2.0
}
}