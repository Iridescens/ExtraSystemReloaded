{
	#base settings for everything ESR related

	"upgradeAlwaysSucceed":true, #does upgrading always succeed?
		"baseFailureMinFactor":0.4, #a multiplier applied to the chance to fail. the first upgrade always succeeds, but failure chance increases for every upgrade after.
	"shipsKeepUpgradesOnDeath":true, #whether ships keep upgrades if they are disabled/destroyed in battle.

	"useRandomQuality":true, #quality based on fleet member ID
		"baseQuality":1.0, #flat quality used if the above value is false
	"maxQuality":3.0, #max quality for any ship


	# below settings used to determine upgrade costs. see upgrade_resource_ratio.csv for item ratios used for each upgrade.

	"hullCostBaseFactor": 0.25,	# how much of the base value of a ship is used to determine upgrade costs, without any diminishing returns. do not set above 1
	#setting the above setting higher results in a much, much steeper upgrade cost curve for ships that are worth more.

	"hullCostDiminishingMaximum": 50000.0, # at what point does the diminishing returns for the base value of a ship end
	#setting the above setting higher results in a greater upgrade cost curve for ships that are worth more.

	"upgradeCostMinFactor":0.05,	# base value of an upgrade. used to determine the base cost of an upgrade not considering levels. setting this to 0 results in a free first upgrade.
	# setting the above setting higher results in a greater base value to all upgrades.

	"upgradeCostMaxFactor":0.85, # value of an upgrade beyond its base value. used to determine the cost of an upgrade using the ratio of its level to its maximum.
	# setting the above setting higher results in a much greater cost to higher-level upgrades.

	"upgradeCostDividingRatio": 1.0, # dividing ratio to final upgrade cost

	#below settings determine max upgrades for upgrades that do not have a max defined.
	"frigateMaxUpgrades": 10,
	"destroyerMaxUpgrades": 15,
	"cruiserMaxUpgrades": 20,
	"capitalMaxUpgrades": 25,
	#the amount each upgrade contributes will scale to these values (so frigate at max level gets same buff as capital at max)

	#quality scaling


	#diminishing return curves
	#below are the scaling curves used for the mod (also known as diminishing returns)
	#these can be used to apply a flat buff to all upgrade values just by raising the scalar values.
	#scalar defines the multiplier applied to the final value of the algorithm.
	#percentOfLevels is the percentage of levels that the scalar applies for. setting it to 1 will make all upgrades
	# that have not already been applied apply at that level. setting it to -1 does the same, except that if you somehow
	# break the max level limit it will completely ignore that. i recommend always having a -1 in there.
	"scalingCurves": [
		{
			"scalar": 1,         #100% power
			"percentOfLevels": 0.35 #applies for 35% of the first levels
		},
		{
			"scalar": 0.66,          #66% power
			"percentOfLevels": 0.25 #applies for 25% of the next levels
		},
		{
			"scalar": 0.33,          #33% power
			"percentOfLevels": 0.1  #applies for 10% of the next levels.
		},
		{
			"scalar": 0.1,         #10% power
			"percentOfLevels": -1   #applies for any remaining levels (by default, the last 35%)
		}
	],


	# do not touch.
	"ruleCommandPackages":[
		"extrasystemreloaded.campaign.rulecmd"
	]
}